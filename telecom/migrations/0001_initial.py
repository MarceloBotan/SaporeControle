# Generated by Django 4.2 on 2023-04-27 13:40

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BoxModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, verbose_name='Modelo')),
            ],
        ),
        migrations.CreateModel(
            name='BoxStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='LinePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, unique=True, verbose_name='Plano')),
                ('plan_type', models.CharField(choices=[('VOZ', 'Voz'), ('DADOS', 'Dados')], default='DADOS', max_length=15, verbose_name='Tipo')),
            ],
        ),
        migrations.CreateModel(
            name='LineStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, unique=True, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='LineStatusRFP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, unique=True, verbose_name='Status RFP')),
            ],
        ),
        migrations.CreateModel(
            name='LineTelecom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, unique=True, verbose_name='Operadora')),
            ],
        ),
        migrations.CreateModel(
            name='SmartModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, verbose_name='Modelo')),
                ('date_release', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Lançamento')),
            ],
        ),
        migrations.CreateModel(
            name='SmartStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='VivoBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='-', max_length=255, verbose_name='Nome')),
                ('branch', models.IntegerField(default=0, verbose_name='Filial')),
                ('number', models.BigIntegerField(default=0, verbose_name='Número')),
                ('imei_1', models.CharField(default='-', max_length=15, unique=True, verbose_name='IMEI 1')),
                ('receipt', models.IntegerField(default=0, verbose_name='Nota Fiscal')),
                ('date_update', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('branch_closed', models.BooleanField(default=False)),
                ('auth_attachment', models.FileField(blank=True, upload_to='vivobox_docs/%Y/%m', verbose_name='Autorização')),
                ('line_id', models.BigIntegerField(default=0)),
                ('obj_model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='telecom.boxmodel', verbose_name='Modelo')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='telecom.boxstatus', verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Smartphone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='-', max_length=255, verbose_name='Nome')),
                ('branch', models.IntegerField(default=0, verbose_name='Filial')),
                ('number', models.BigIntegerField(default=0, verbose_name='Número')),
                ('imei_1', models.CharField(default='-', max_length=15, unique=True, verbose_name='IMEI 1')),
                ('imei_2', models.CharField(default='-', max_length=15, verbose_name='IMEI 2')),
                ('receipt', models.IntegerField(default=0, verbose_name='Nota Fiscal')),
                ('date_update', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('branch_closed', models.BooleanField(default=False)),
                ('auth_attachment', models.FileField(blank=True, upload_to='smartphone_docs/%Y/%m', verbose_name='Autorização')),
                ('line_id', models.BigIntegerField(default=0)),
                ('obj_model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='telecom.smartmodel', verbose_name='Modelo')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='telecom.smartstatus', verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='-', max_length=255, verbose_name='Nome')),
                ('branch', models.IntegerField(default=0, verbose_name='Filial')),
                ('number', models.BigIntegerField(default=0, unique=True, verbose_name='Número')),
                ('sim_card', models.CharField(default='-', max_length=20, verbose_name='SIM Card')),
                ('sim_card_old', models.CharField(default='-', max_length=20)),
                ('receipt', models.IntegerField(default=0, verbose_name='Nota Fiscal')),
                ('date_update', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('branch_closed', models.BooleanField(default=False)),
                ('action', models.CharField(choices=[('OK', 'Ok'), ('CANCELAR APOS FIDELIDADE', 'Cancelar Após Fidelidade'), ('CANCELAR EM MAIO', 'Cancelar em Maio'), ('MAPEAR', 'Mapear')], default='OK', max_length=31, verbose_name='Ação')),
                ('consumption', models.CharField(choices=[('COM CONSUMO', 'Com Consumo'), ('SEM CONSUMO 1 MES', 'Sem Consumo 1 Mês'), ('SEM CONSUMO 2 MESES', 'Sem Consumo 2 Meses'), ('SEM CONSUMO 3 MESES', 'Sem Consumo 3 Meses'), ('SEM CONSUMO 4 MESES', 'Sem Consumo 4 Meses')], default='COM CONSUMO', max_length=63, verbose_name='Consumo')),
                ('vip', models.BooleanField(default=False, verbose_name='VIP')),
                ('accountable', models.CharField(choices=[('MAPEADO', 'Mapeado'), ('TG', 'TG'), ('SAPORE', 'Sapore')], default='ATIVO', max_length=63, verbose_name='Responsável')),
                ('name_mapped', models.BooleanField(default=True, verbose_name='Nome Mapeado')),
                ('branch_mapped', models.BooleanField(default=True, verbose_name='CR Mapeado')),
                ('auth_attachment', models.FileField(blank=True, upload_to='line_docs/%Y/%m', verbose_name='Autorização')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='telecom.lineplan')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='telecom.linestatus')),
                ('status_rfp', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='telecom.linestatusrfp')),
                ('telecom', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='telecom.linetelecom')),
            ],
        ),
    ]
